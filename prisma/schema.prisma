// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GENDER {
  MALE
  FEMALE
  OTHER
}

enum BEVERAGE_TYPES {
  NO_ICE
  ICE
  HOT
}

enum ORDER_STATUS {
  RECEIVED
  PENDING
  READY
  CLOSED
}

model User {
  @@map("users")
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  dob       String   @map("date_of_birth")
  gender    GENDER?  @default(OTHER)
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  @@map("orders")
  id        Int          @id @default(autoincrement())
  user      User         @relation(fields: [userId], references: [id])
  userId    Int          @map("user_id")
  beverages BeveragesOnOrders[]
  status    ORDER_STATUS @default(RECEIVED)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Beverage {
  @@map("beverages")
  id          Int      @id @default(autoincrement())
  title       String
  type        BEVERAGE_TYPES
  ingredients BeverageIngredients[]
  orders      BeveragesOnOrders[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BeveragesOnOrders {
  @@map("beverages_on_orders")

  beverage   Beverage @relation(fields: [beverageId], references: [id])
  beverageId Int      @map("beverage_id")

  order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int      @map("order_id")

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@id([beverageId, orderId])
}

model Ingredient {
  @@map("ingredients")
  id        Int      @id @default(autoincrement())
  title     String
  beverages BeverageIngredients[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BeverageIngredients {
  @@map("bevereage_ingredients")

  beverage     Beverage   @relation(fields: [beverageId], references: [id])
  beverageId   Int        @map("beverage_id")

  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int        @map("ingredient_id")

  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([beverageId, ingredientId])
}
